/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Exam.java
 *
 * Created on Feb 3, 2012, 4:51:37 PM
 */
package examtest;

import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.Formatter;
import java.util.Scanner;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;

/**
 *
 * @author TOSHIBA
 */
public class Exam extends javax.swing.JFrame {

    public Scanner input = null;
    public Scanner ans = null;
    public Scanner time = null;
    public Scanner StudentAnswer = null;
    public Formatter MyAnswer = null;
    public int i = 1;
    public int ques_no = 0;

    public int getTimeLocker() {
        return timeLocker;
    }

    public void setTimeLocker(int timeLocker) {
        this.timeLocker = timeLocker;
    }
    public int timeLocker = 0;

    public int getLock() {
        return lock;
    }

    public void setLock(int lock) {
        this.lock = lock;
    }
    public int lock = 0;

    public int getCorrect() {
        return correct;
    }

    public void setCorrect(int correct) {
        this.correct = correct;
    }
    public int correct = 0;

    public int getIncorrect() {
        return incorrect;
    }

    public void setIncorrect(int incorrect) {
        this.incorrect = incorrect;
    }
    public int incorrect = 0;

    public int getQues_no() {
        return ques_no;
    }

    public void setQues_no(int ques_no) {
        this.ques_no = ques_no;
    }
    public String[] question = new String[120];
    public String[] option1 = new String[120];
    public String[] option2 = new String[120];
    public String[] option3 = new String[120];
    public String[] option4 = new String[120];
    public String[] answer = new String[120];
    public String[] imageIcon = new String[120];
    public String[] fontType = new String[120];
    public int[] question_no;
    public float count = 0;

    public float getNegMarking() {
        return negMarking;
    }

    public void setNegMarking(float negMarking) {
        this.negMarking = negMarking;
    }
    public float negMarking = 0;
    public int finishCount = 0;
    public String name = null;
    public int roll = 0;
    public int nameHandel = 0;
    public int rollHandel = 0;
    public int timer = 0;
    public int timerHandel = 0;

    public boolean isButtonTimer() {
        return buttonTimer;
    }

    public void setButtonTimer(boolean buttonTimer) {
        this.buttonTimer = buttonTimer;
    }
    public boolean buttonTimer = false;
    public int minFile = 10;
    public int secFile = 0;
    public int hourFile = 0;
    public int send = 0;
    public Thread th;

    public int getCheckC() {
        return checkC;
    }

    public void setCheckC(int checkC) {
        this.checkC = checkC;
    }
    public int checkC = 1;

    public int getSend() {
        return send;
    }

    public void setSend(int send) {
        this.send = send;
    }
    public int connectAgain = 0;

    public int getConnectAgain() {
        return connectAgain;
    }

    public void setConnectAgain(int connectAgain) {
        this.connectAgain = connectAgain;
    }
    public boolean changeTime = false;
    DigitalWatch dw = new DigitalWatch(this);
    examDesign ed;
    ThreadSocket ts;

    /** Creates new form Exam */
    public Exam() {
        initComponents();
        setLocationRelativeTo(null);
        ed = new examDesign(this);
        new Thread(ed).start();
        ts = new ThreadSocket(this);
        th = new Thread(ts);
        th.start();
        //openFile();
        //setQuestion();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel8 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        massege = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        DetailsResult = new javax.swing.JButton();
        nameAndRollButton = new javax.swing.JButton();
        start = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        sub = new javax.swing.JLabel();
        totalMark = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        timeChange = new javax.swing.JButton();
        jProgressBar = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        seconds = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        minute = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        hour = new javax.swing.JLabel();
        hour1 = new javax.swing.JLabel();
        connect = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        nameLebel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        rollLebel = new javax.swing.JLabel();
        fontChange = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        op4 = new javax.swing.JRadioButton();
        op2 = new javax.swing.JRadioButton();
        op3 = new javax.swing.JRadioButton();
        op1 = new javax.swing.JRadioButton();
        submit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        questionLebel = new javax.swing.JTextArea();
        pre = new javax.swing.JButton();
        next = new javax.swing.JButton();
        imageLebel = new javax.swing.JLabel();
        ms = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        message = new javax.swing.JTextField();
        answerdText = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Exam System");

        jPanel8.setBackground(new java.awt.Color(0, 204, 204));

        jPanel7.setBackground(new java.awt.Color(204, 153, 255));

        jLabel9.setFont(new java.awt.Font("Tempus Sans ITC", 0, 42));
        jLabel9.setForeground(new java.awt.Color(0, 153, 51));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Jagannath University");

        jLabel10.setFont(new java.awt.Font("Tempus Sans ITC", 0, 18));
        jLabel10.setForeground(new java.awt.Color(51, 0, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Department of CSE");

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examtest/Jagannath_University_logo2.png"))); // NOI18N

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examtest/WORLDMAP.GIF"))); // NOI18N

        massege.setFont(new java.awt.Font("Tempus Sans ITC", 0, 34));
        massege.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        massege.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(massege, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(massege, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel10)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(153, 153, 255));

        DetailsResult.setFont(new java.awt.Font("Tahoma", 1, 10));
        DetailsResult.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examtest/details.PNG"))); // NOI18N
        DetailsResult.setText("Details Result");
        DetailsResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DetailsResultActionPerformed(evt);
            }
        });

        nameAndRollButton.setFont(new java.awt.Font("Tahoma", 1, 10));
        nameAndRollButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examtest/nameandroll.PNG"))); // NOI18N
        nameAndRollButton.setText("Name & Roll no.");
        nameAndRollButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameAndRollButtonActionPerformed(evt);
            }
        });

        start.setFont(new java.awt.Font("Tahoma", 1, 10));
        start.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examtest/start.png"))); // NOI18N
        start.setText("Start Exam");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(0, 204, 255));

        sub.setFont(new java.awt.Font("Traditional Arabic", 1, 28));
        sub.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        totalMark.setFont(new java.awt.Font("Traditional Arabic", 1, 18));
        totalMark.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sub, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                    .addComponent(totalMark, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(sub, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(totalMark, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        timeChange.setText("Time Remains");
        timeChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeChangeActionPerformed(evt);
            }
        });

        jProgressBar.setBackground(new java.awt.Color(204, 204, 255));
        jProgressBar.setForeground(new java.awt.Color(0, 51, 255));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        seconds.setFont(new java.awt.Font("Tahoma", 0, 24));
        seconds.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        seconds.setText("00");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24));
        jLabel4.setText(":");

        minute.setFont(new java.awt.Font("Tahoma", 0, 24));
        minute.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minute.setText("00");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24));
        jLabel6.setText(":");

        hour.setFont(new java.awt.Font("Tahoma", 0, 24));
        hour.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        hour.setText("00");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(hour, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(minute, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seconds, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(seconds, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(minute, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(hour, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        hour1.setFont(new java.awt.Font("Tahoma", 0, 14));
        hour1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hour1.setText("00");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(timeChange, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                    .addComponent(hour1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(timeChange)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(hour1)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        connect.setFont(new java.awt.Font("Tahoma", 1, 10));
        connect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examtest/connect.PNG"))); // NOI18N
        connect.setText("Connect Again");
        connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(start, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                    .addComponent(connect, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                    .addComponent(DetailsResult, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                    .addComponent(nameAndRollButton, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(nameAndRollButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DetailsResult, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(connect, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(153, 204, 255));

        nameLebel.setFont(new java.awt.Font("Tahoma", 1, 14));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel1.setText("Name:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel3.setText("Roll no:");

        rollLebel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        fontChange.setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N
        fontChange.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "English", "Bangla" }));
        fontChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fontChangeActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Font:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameLebel, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rollLebel, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fontChange, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(fontChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nameLebel, javax.swing.GroupLayout.DEFAULT_SIZE, 17, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rollLebel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));

        op4.setFont(new java.awt.Font("Times New Roman", 0, 12));
        op4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op4ActionPerformed(evt);
            }
        });

        op2.setFont(new java.awt.Font("Times New Roman", 0, 12));
        op2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op2ActionPerformed(evt);
            }
        });

        op3.setFont(new java.awt.Font("Times New Roman", 0, 12));
        op3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op3ActionPerformed(evt);
            }
        });

        op1.setFont(new java.awt.Font("Times New Roman", 0, 12));
        op1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op1ActionPerformed(evt);
            }
        });

        submit.setFont(new java.awt.Font("Tahoma", 3, 11));
        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        questionLebel.setColumns(20);
        questionLebel.setEditable(false);
        questionLebel.setFont(new java.awt.Font("Times New Roman", 1, 14));
        questionLebel.setRows(5);
        jScrollPane2.setViewportView(questionLebel);

        pre.setFont(new java.awt.Font("Tahoma", 3, 8));
        pre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examtest/backward.gif"))); // NOI18N
        pre.setText("Previous");
        pre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preActionPerformed(evt);
            }
        });

        next.setFont(new java.awt.Font("Tahoma", 3, 8)); // NOI18N
        next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examtest/forward.gif"))); // NOI18N
        next.setText("Next");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        imageLebel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(op1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(op2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(op3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(op4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(submit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(next))
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(imageLebel, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(imageLebel, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(op1)
                                .addGap(18, 18, 18)
                                .addComponent(op2)
                                .addGap(18, 18, 18)
                                .addComponent(op3)
                                .addGap(18, 18, 18)
                                .addComponent(op4)))))
                .addContainerGap())
        );

        ms.setBackground(new java.awt.Color(51, 51, 255));

        output.setBackground(new java.awt.Color(226, 226, 252));
        output.setColumns(20);
        output.setEditable(false);
        output.setFont(new java.awt.Font("Times New Roman", 0, 14));
        output.setRows(5);
        output.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Inbox", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 9))); // NOI18N
        jScrollPane1.setViewportView(output);

        message.setFont(new java.awt.Font("Times New Roman", 0, 12));
        message.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Inform to Controller", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 9))); // NOI18N
        message.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout msLayout = new javax.swing.GroupLayout(ms);
        ms.setLayout(msLayout);
        msLayout.setHorizontalGroup(
            msLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, msLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(msLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(message, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE))
                .addContainerGap())
        );
        msLayout.setVerticalGroup(
            msLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(msLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(message, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addContainerGap())
        );

        answerdText.setEditable(false);
        answerdText.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Answerd Questions no", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 9))); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ms, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(answerdText, javax.swing.GroupLayout.DEFAULT_SIZE, 1373, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(ms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(answerdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examtest/nameandroll.PNG"))); // NOI18N
        jMenuItem1.setText("Name & Roll no.");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examtest/details.PNG"))); // NOI18N
        jMenuItem2.setText("Detais Result");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examtest/start.png"))); // NOI18N
        jMenuItem3.setText("Start Exam");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examtest/connect.PNG"))); // NOI18N
        jMenuItem5.setText("Connect Again");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Cradits");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:

        if (nameHandel == 0 && rollHandel == 0) {
            JOptionPane.showMessageDialog(null, "Please enter your name and roll no.");
        } else if (nameHandel == 0) {
            JOptionPane.showMessageDialog(null, "Please enter your name.");
        } else if (rollHandel == 0) {
            JOptionPane.showMessageDialog(null, "Please enter your roll no.");
        } else if (timerHandel == 0) {
            JOptionPane.showMessageDialog(null, "Press (Strat Exam) Button.");
        } else {
            ques_no++;
            if (question[ques_no] != null) {
                nextWork();
            }
            if (ques_no == finishCount) {
                next.setText("Finish");
            }
            if (ques_no == finishCount + 1 && ts.getComplete() == 0) {
                if (JOptionPane.showConfirmDialog(null, "You have missed " + (getFinishCount() - getCorrect() - getIncorrect()) + " questions.\nDo you want to finish exam?") < 1) {
                    buttonTimer = true;
                    try {
                        ts.os.writeObject("Marks" + " " + new Date() + "\n");
                        ts.os.writeObject("Name: " + name + "  Roll no: " + roll + "  Marks: " + getCount());

                        output.setText(output.getText() + "Name: " + name + "  Roll no: " + roll + "  Marks: " + getCount() + "\n");


                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(null, "Problem to send your result to the controller\nInform him directly.\nThank you");
                    }
                    closeMyAnswer();
                    JOptionPane.showMessageDialog(null, "Result: " + getCount());
                    ques_no--;
                    ts.setComplete(1);
                } else {
                    ques_no--;
                }
            } else if (ts.getComplete() == 1 && ques_no == finishCount + 1) {
                JOptionPane.showMessageDialog(null, "Exame Finished.");
                ques_no--;
            }
        }
    }//GEN-LAST:event_nextActionPerformed

    private void preActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preActionPerformed
        // TODO add your handling code here:
        if (nameHandel < 1 || rollHandel < 1) {
            JOptionPane.showMessageDialog(null, "Please enter your name and roll no.");
        } else if (timerHandel == 0) {
            JOptionPane.showMessageDialog(null, "Press (Strat Exam) Button.");
        } else {
            ques_no--;
            next.setText("Next");
            if (ques_no <= 0) {
                ques_no = 1;
            }
            nextWork();
        }

    }//GEN-LAST:event_preActionPerformed

    private void op1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op1ActionPerformed
        // TODO add your handling code here:
        if (op1.isSelected()) {
            if (op2.isSelected() || op3.isSelected() || op4.isSelected()) {
                clickAgain(op2, op4, op3);
            }
        }
    }//GEN-LAST:event_op1ActionPerformed

    private void op2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op2ActionPerformed
        // TODO add your handling code here:
        if (op2.isSelected()) {
            if (op1.isSelected() || op3.isSelected() || op4.isSelected()) {
                clickAgain(op1, op4, op3);
            }
        }
    }//GEN-LAST:event_op2ActionPerformed

    private void op3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op3ActionPerformed
        // TODO add your handling code here:
        if (op3.isSelected()) {
            if (op1.isSelected() || op2.isSelected() || op4.isSelected()) {
                clickAgain(op1, op4, op2);
            }
        }
    }//GEN-LAST:event_op3ActionPerformed

    private void op4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op4ActionPerformed
        // TODO add your handling code here:
        if (op4.isSelected()) {
            if (op1.isSelected() || op3.isSelected() || op2.isSelected()) {
                clickAgain(op1, op2, op3);
            }
        }
    }//GEN-LAST:event_op4ActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
        int noSub = 0;
        if (timer != 0) {
            JOptionPane.showMessageDialog(null, "Exame finished.");
        } else if (nameHandel == 0 && rollHandel == 0) {
            JOptionPane.showMessageDialog(null, "Please enter your name and roll no.");
        } else if (nameHandel == 0) {
            JOptionPane.showMessageDialog(null, "Please enter your name.");
        } else if (rollHandel == 0) {
            JOptionPane.showMessageDialog(null, "Please enter your roll no.");
        } else if (timerHandel == 0) {
            JOptionPane.showMessageDialog(null, "Press (Strat Exam) Button.");
        } else if (question_no[ques_no] == 1) {
            JOptionPane.showMessageDialog(null, "You have already submited this question.");
            noSub = 1;
        } else if (op1.isSelected()) {
            if (op1.getText().equalsIgnoreCase(answer[ques_no])) {
                MyAnswer.format("%s\n(%s) : Correct.   \n", question[ques_no], op1.getText());
                increaseCount();
                correct++;
            } else {
                decreaseCount();
                MyAnswer.format("%s\n(%s) : Wrong.(%s)\n", question[ques_no], op1.getText(), answer[ques_no]);
                incorrect++;
            }
            answerdText.setText(answerdText.getText() + ques_no + ",");
        } else if (op2.isSelected()) {
            if (op2.getText().equalsIgnoreCase(answer[ques_no])) {
                MyAnswer.format("%s\n(%s) : Correct.   \n", question[ques_no], op2.getText());
                increaseCount();
                correct++;
            } else {
                decreaseCount();
                MyAnswer.format("%s\n(%s) : Wrong.(%s)\n", question[ques_no], op2.getText(), answer[ques_no]);
                incorrect++;
            }
            answerdText.setText(answerdText.getText() + ques_no + ",");
        } else if (op3.isSelected()) {
            if (op3.getText().equalsIgnoreCase(answer[ques_no])) {
                MyAnswer.format("%s\n(%s) : Correct.   \n", question[ques_no], op3.getText());
                increaseCount();
                correct++;
            } else {
                decreaseCount();
                MyAnswer.format("%s\n(%s) : Wrong.(%s)\n", question[ques_no], op3.getText(), answer[ques_no]);
                incorrect++;
            }
            answerdText.setText(answerdText.getText() + ques_no + ",");
        } else if (op4.isSelected()) {
            if (op4.getText().equalsIgnoreCase(answer[ques_no])) {
                MyAnswer.format("%s\n(%s) : Correct.   \n", question[ques_no], op4.getText());
                increaseCount();
                correct++;
            } else {
                decreaseCount();
                MyAnswer.format("%s\n(%s) : Wrong.(%s)\n", question[ques_no], op4.getText(), answer[ques_no]);
                incorrect++;
            }
            answerdText.setText(answerdText.getText() + ques_no + ",");
        } else {
            JOptionPane.showMessageDialog(null, "Please select an option.");
            noSub = 1;
        }
        if (noSub == 0 && ts.getComplete() == 0) {
            question_no[ques_no] = 1;
            MyAnswer.format("----------------------------------------------------------------------------\n");
        }
    }//GEN-LAST:event_submitActionPerformed

    private void nameAndRollButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameAndRollButtonActionPerformed
        // TODO add your handling code here:
        if (checkC == 0) {
            if (nameHandel < 1) {
                name = JOptionPane.showInputDialog("Enter your name");
                nameLebel.setText(name);

                nameHandel = 1;
                if ("".equals(name) || name == null) {
                    nameHandel = 0;
                }
            } else {
                JOptionPane.showMessageDialog(null, "You already entered your name.");
            }
            if (rollHandel < 1) {
                try {
                    roll = Integer.parseInt(JOptionPane.showInputDialog("Enter your Roll no."));
                    rollLebel.setText("" + roll);

                    rollHandel = 1;
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Enter your roll no correctly.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "You already entered your roll no.");
            }
            if (nameHandel == 1 && rollHandel == 1 && timer == 0) {
                try {
                    MyAnswer = new Formatter("D://" + name + "_" + roll + ".doc");
                } catch (Exception ex) {
                    System.out.println("Error to creat Student answer file:(" + ex + ")");
                }
            }

            if (nameHandel == 1 && rollHandel == 1 && send == 0) {
                try {
                    ts.os.writeObject("EEEName: " + name + "\tRoll no: " + roll + " \tConnected\n");
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Error to send name & roll to the controller.");
                }
                send = 1;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Frist connect to the controller.");
        }
    }//GEN-LAST:event_nameAndRollButtonActionPerformed

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        // TODO add your handling code here:
        if (nameHandel == 0 && rollHandel == 0) {
            JOptionPane.showMessageDialog(null, "Please enter your name and roll no.");
        } else if (nameHandel == 0) {
            JOptionPane.showMessageDialog(null, "Please enter your name.");
        } else if (rollHandel == 0) {
            JOptionPane.showMessageDialog(null, "Please enter your roll no.");
        } else if (timerHandel == 0) {
            if (getTimeLocker() == 1) {
                //dw = new DigitalWatch(this);
                new Thread(dw).start();
                timerHandel = 1;
                nextActionPerformed(evt);
            } else {
                JOptionPane.showMessageDialog(null, "Locked by Controller.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Exam already started.");
        }
    }//GEN-LAST:event_startActionPerformed

    private void DetailsResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DetailsResultActionPerformed
        // TODO add your handling code here:
        if (buttonTimer || timer > 1) {
            if (getLock() == 1) {
                DetailResult dr = new DetailResult(name, roll, this);
                dr.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Locked!\nWait until the exam end.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No Details.");
        }
    }//GEN-LAST:event_DetailsResultActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        nameAndRollButtonActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        DetailsResultActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        startActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void timeChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeChangeActionPerformed
        // TODO add your handling code here:
        if (changeTime) {
            changeTime = false;
            timeChange.setText("Time Remains");
        } else {
            changeTime = true;
            timeChange.setText("Total Time");
        }
    }//GEN-LAST:event_timeChangeActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        HelpA h = new HelpA();
        h.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectActionPerformed
        // TODO add your handling code here:
        if (connectAgain == 1) {
            th.stop();
            ts = new ThreadSocket(this);
            th = new Thread(ts);
            th.start();
            setConnectAgain(0);
        } else {
            JOptionPane.showMessageDialog(null, "Connection is already made.");
        }

    }//GEN-LAST:event_connectActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        connectActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void messageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageActionPerformed
        // TODO add your handling code here:
        if ("jnucse02-exit".equals(message.getText())) {
            System.exit(0);
        }
        if (checkC == 0) {
            if (nameHandel == 1 && rollHandel == 1) {
                try {
                    ts.os.writeObject("EEEName: " + getExameenName() + " Roll no.:" + getExameenRoll() + ">>>" + message.getText());
                    output.setText(output.getText() + getExameenName() + ": " + message.getText() + "\n");
                } catch (Exception ex) {
                    output.setText(output.getText() + "Problem!!!! in chatting()Frame. unable to chat with the server" + ex + "\n");
                }
                message.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "First enter your name and roll no.");
                message.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Frist connect to the controller.");
            message.setText("");
        }

    }//GEN-LAST:event_messageActionPerformed

    private void fontChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fontChangeActionPerformed
        // TODO add your handling code here:
        if (fontChange.getSelectedIndex() == 0) {
            questionLebel.setFont(new Font("Times New Roman", Font.PLAIN, 14));
            op1.setFont(new Font("Times New Roman", Font.PLAIN, 14));
            op2.setFont(new Font("Times New Roman", Font.PLAIN, 14));
            op3.setFont(new Font("Times New Roman", Font.PLAIN, 14));
            op4.setFont(new Font("Times New Roman", Font.PLAIN, 14));
        } else {
            questionLebel.setFont(new Font("SutonnyMJ", Font.PLAIN, 18));
            op1.setFont(new Font("SutonnyMJ", Font.PLAIN, 18));
            op2.setFont(new Font("SutonnyMJ", Font.PLAIN, 18));
            op3.setFont(new Font("SutonnyMJ", Font.PLAIN, 18));
            op4.setFont(new Font("SutonnyMJ", Font.PLAIN, 18));
        }
    }//GEN-LAST:event_fontChangeActionPerformed

    public void openFile(String t, String q, String a) {
        try {
            input = new Scanner(new File(q));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error to open question file");
        }

        try {
            ans = new Scanner(new File(a));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error to open answer file");
        }
        if (input.hasNext()) {
            sub.setText("" + input.nextLine());
        }
        if (input.hasNext()) {
            totalMark.setText("" + input.nextLine());
        }
        for (int ques = 1; input.hasNext(); ques++) {
            String abc = input.nextLine();
            question[ques] = "";
            while (!"----)".equals(abc)) {
                question[ques] = question[ques] + abc + "\n";
                abc = input.nextLine();
            }
            if (input.hasNext()) {
                option1[ques] = input.nextLine();

                option2[ques] = input.nextLine();

                option3[ques] = input.nextLine();

                option4[ques] = input.nextLine();

                imageIcon[ques] = input.nextLine();

                fontType[ques] = input.nextLine();

                finishCount++;
            }
        }

        try {
            time = new Scanner(new File(t));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error to open time file");
        }


        question_no = new int[question.length];
    }

    public void setQuestion(String q, String a) {
        for (int ques = 1; ans.hasNext(); ques++) {
            if (ans.hasNext()) {
                answer[ques] = ans.nextLine();
            }
        }

        if (time.hasNextInt()) {
            hourFile = time.nextInt();
            minFile = time.nextInt();
            secFile = time.nextInt();
            if (hourFile < 10) {
                hour1.setText("Exam Time. 0" + hourFile + ":");
            } else {
                hour1.setText("Exam Time. " + hourFile + ":");
            }

            if (minFile < 10) {
                hour1.setText(hour1.getText() + "0" + minFile + ":");
            } else {
                hour1.setText(hour1.getText() + "" + minFile + ":");
            }

            if (secFile < 10) {
                hour1.setText(hour1.getText() + "0" + secFile);
            } else {
                hour1.setText(hour1.getText() + "" + secFile);
            }
        }

        if (input.hasNext() == false) {
            input.close();
        }
        if (ans.hasNext() == false) {
            ans.close();
        }
        if (time.hasNext() == false) {
            time.close();
        }

        File qf = new File(q);
        qf.delete();
        File af = new File(a);
        af.delete();
    }

    public void nextWork() {
        if (op1.isSelected()) {
            op1.doClick();
        }
        if (op2.isSelected()) {
            op2.doClick();
        }
        if (op3.isSelected()) {
            op3.doClick();
        }
        if (op4.isSelected()) {
            op4.doClick();
        }
        questionLebel.setText(question[ques_no]);
        //questionLebel.setText("");
        /*String s = question[ques_no];
        
        for (int w = 0; w < s.length() - 1; w++) {
        String a = "" + s.toCharArray()[w] + s.toCharArray()[w + 1];
        
        if ("\\n".equals(a)) {
        questionLebel.setText(questionLebel.getText() + "\n");
        w = w + 1;
        } else {
        questionLebel.setText(questionLebel.getText() + s.toCharArray()[w]);
        }
        }
        questionLebel.setText(questionLebel.getText() + s.toCharArray()[s.length() - 1]);*/
        op1.setText(option1[ques_no]);
        op2.setText(option2[ques_no]);
        op3.setText(option3[ques_no]);
        op4.setText(option4[ques_no]);
        try {
            imageLebel.setIcon(new ImageIcon("D:/" + imageIcon[ques_no]));
        } catch (Exception ex) {
            imageLebel.setText("No Preview");
        }

        if ("-(%E%)-".equals(fontType[ques_no])) {
            questionLebel.setFont(new Font("Times New Roman", Font.PLAIN, 14));
            op1.setFont(new Font("Times New Roman", Font.PLAIN, 14));
            op2.setFont(new Font("Times New Roman", Font.PLAIN, 14));
            op3.setFont(new Font("Times New Roman", Font.PLAIN, 14));
            op4.setFont(new Font("Times New Roman", Font.PLAIN, 14));
        } else if ("-(%B%)-".equals(fontType[ques_no])) {
            questionLebel.setFont(new Font("SutonnyMJ", Font.PLAIN, 18));
            op1.setFont(new Font("SutonnyMJ", Font.PLAIN, 18));
            op2.setFont(new Font("SutonnyMJ", Font.PLAIN, 18));
            op3.setFont(new Font("SutonnyMJ", Font.PLAIN, 18));
            op4.setFont(new Font("SutonnyMJ", Font.PLAIN, 18));
        }
    }

    public void clickAgain(JRadioButton jRadioButtonA, JRadioButton jRadioButtonB, JRadioButton jRadioButtonC) {
        if (jRadioButtonA.isSelected()) {
            jRadioButtonA.doClick();
        }
        if (jRadioButtonB.isSelected()) {
            jRadioButtonB.doClick();
        }
        if (jRadioButtonC.isSelected()) {
            jRadioButtonC.doClick();
        }
    }

    public float getCount() {
        return count;
    }

    public float increaseCount() {
        count++;
        return count;
    }

    public float decreaseCount() {
        count = count - getNegMarking();
        return count;
    }

    public int getFinishCount() {
        return finishCount;
    }

    public boolean getButtonTimer() {
        return buttonTimer;
    }

    public void setTimer(int time) {
        timer = time;
    }

    public int getMinFile() {
        return minFile;
    }

    public int getSecFile() {
        return secFile;
    }

    public int getHourFile() {
        return hourFile;
    }

    public void closeMyAnswer() {
        if (MyAnswer != null) {
            MyAnswer.close();
        }
    }

    public String getExameenName() {
        return name;
    }

    public int getExameenRoll() {
        return roll;
    }

    public void expelMsg() {
        JOptionPane.showMessageDialog(null, "You are expeled.\nYour Result is: " + getCount(), "Expeled message", 1);
    }

    public void startExamActionPerformer() {
        //dw = new DigitalWatch(this);
        new Thread(dw).start();
        timerHandel = 1;
        nextActionPerformed(null);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Exam().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DetailsResult;
    private javax.swing.JTextField answerdText;
    private javax.swing.JButton connect;
    private javax.swing.JComboBox fontChange;
    public javax.swing.JLabel hour;
    public javax.swing.JLabel hour1;
    private javax.swing.JLabel imageLebel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    public javax.swing.JProgressBar jProgressBar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JLabel massege;
    public javax.swing.JTextField message;
    public javax.swing.JLabel minute;
    public javax.swing.JPanel ms;
    private javax.swing.JButton nameAndRollButton;
    public javax.swing.JLabel nameLebel;
    private javax.swing.JButton next;
    private javax.swing.JRadioButton op1;
    private javax.swing.JRadioButton op2;
    private javax.swing.JRadioButton op3;
    private javax.swing.JRadioButton op4;
    public javax.swing.JTextArea output;
    private javax.swing.JButton pre;
    private javax.swing.JTextArea questionLebel;
    public javax.swing.JLabel rollLebel;
    public javax.swing.JLabel seconds;
    public javax.swing.JButton start;
    private javax.swing.JLabel sub;
    private javax.swing.JButton submit;
    private javax.swing.JButton timeChange;
    private javax.swing.JLabel totalMark;
    // End of variables declaration//GEN-END:variables
}
