/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * QuestionCreator.java
 *
 * Created on Dec 15, 2012, 1:22:39 PM
 */
package networking;

import java.awt.Font;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author TOSHIBA
 */
public class QuestionCreator extends javax.swing.JFrame {

    public String examName;
    public String TotalMarks;

    public int getNewcount() {
        return newcount;
    }

    public void setNewcount(int newcount) {
        this.newcount = newcount;
    }
    public int newcount = 0;

    public String getTotalMarks() {
        return TotalMarks;
    }

    public void setTotalMarks(String TotalMarks) {
        this.TotalMarks = TotalMarks;
    }

    public String getExamName() {
        return examName;
    }

    public void setExamName(String examName) {
        this.examName = examName;
    }
    public String Question[];
    public String option1[];
    public String option2[];
    public String option3[];
    public String option4[];
    public String image[];
    public String fontType[];
    public String answer[];

    public int getCount() {
        return count;
    }

    public void setCount(int count) {
        this.count = count;
    }
    public int count;
    SavingFile sf;

    public void setS(int size) {
        this.size = size;
    }

    public int getS() {
        return size;
    }
    public int size;

    public String getAnswerName() {
        return answerName;
    }

    public void setAnswerName(String answerName) {
        this.answerName = answerName;
    }

    public String getQuestionName() {
        return questionName;
    }

    public void setQuestionName(String questionName) {
        this.questionName = questionName;
    }
    public String questionName;
    public String answerName;

    /** Creates new form QuestionCreator */
    public QuestionCreator() {
        initComponents();
        setLocationRelativeTo(null);
        makingDir();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        eName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        eMarks = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        next = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        progress = new javax.swing.JProgressBar();
        save = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        op2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        op1 = new javax.swing.JTextField();
        ansl = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        op4 = new javax.swing.JTextField();
        op3 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        imageName = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        questionArea = new javax.swing.JTextArea();
        imageChooser = new javax.swing.JButton();
        englishButton = new javax.swing.JButton();
        banglaButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        fontLebel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setTitle("N.doc Question Creator");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24));
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("N.doc Question Creator");
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel2.setText("Exam Name:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Total Marks:");

        next.setFont(new java.awt.Font("Times New Roman", 0, 12));
        next.setText("Save & Next >>");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 12));
        jButton1.setText("<< Previous");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        progress.setFont(new java.awt.Font("Times New Roman", 0, 12));
        progress.setStringPainted(true);

        save.setFont(new java.awt.Font("Times New Roman", 0, 12));
        save.setText("*Save and Finish*");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        newButton.setFont(new java.awt.Font("Times New Roman", 1, 12));
        newButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/networking/newFile.PNG"))); // NOI18N
        newButton.setText("New Document");
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        op2.setBackground(new java.awt.Color(236, 232, 232));
        op2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Answer:");

        op1.setBackground(new java.awt.Color(236, 232, 232));
        op1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ansl.setBackground(new java.awt.Color(204, 204, 255));
        ansl.setEditable(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel7.setText("Option 4:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel6.setText("Option 3:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel5.setText("Option 2:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel4.setText("Option 1:");

        op4.setBackground(new java.awt.Color(236, 232, 232));
        op4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        op3.setBackground(new java.awt.Color(236, 232, 232));
        op3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel9.setText("Image Name:");

        imageName.setBackground(new java.awt.Color(236, 232, 232));
        imageName.setText("none");
        imageName.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel10.setText("Question:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Option 1", "Option 2", "Option 3", "Option 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        questionArea.setColumns(20);
        questionArea.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        questionArea.setRows(5);
        jScrollPane1.setViewportView(questionArea);

        imageChooser.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        imageChooser.setText("Choose Your Image Here...");
        imageChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 821, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ansl, javax.swing.GroupLayout.DEFAULT_SIZE, 563, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(imageName, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(imageChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(op4, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
                            .addComponent(op3, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
                            .addComponent(op2, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
                            .addComponent(op1, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(op1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(op2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(op3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(op4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(imageName, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(imageChooser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ansl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        englishButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/networking/inkPen1.PNG"))); // NOI18N
        englishButton.setText("English");
        englishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                englishButtonActionPerformed(evt);
            }
        });

        banglaButton.setFont(new java.awt.Font("SutonnyMJ", 0, 18));
        banglaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/networking/inkPen1.PNG"))); // NOI18N
        banglaButton.setText("evsjv");
        banglaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                banglaButtonActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel11.setText("Font in Use:");

        fontLebel.setFont(new java.awt.Font("Times New Roman", 1, 14));
        fontLebel.setForeground(new java.awt.Color(0, 0, 204));
        fontLebel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fontLebel.setText("English");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 841, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 841, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(progress, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 841, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(eName, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(eMarks, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(newButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(englishButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(banglaButton)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fontLebel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fontLebel, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(banglaButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(englishButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(eMarks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(eName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(next)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(save))
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("New Document");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Save and finish");
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem2.setText("Cradits");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:
        if (getNewcount() == 1) {
            if (eName.getText() != null && !"".equals(eName.getText()) && eMarks.getText() != null && !"".equals(eMarks.getText())) {

                if (!"".equals(questionArea.getText()) || questionArea.getText() != null) {
                    if (!"".equals(op1.getText()) || op1.getText() != null) {
                        if (!"".equals(op2.getText()) || op2.getText() != null) {
                            if (!"".equals(op3.getText()) || op3.getText() != null) {
                                if (!"".equals(op4.getText()) || op4.getText() != null) {
                                    if (count < getS() - 1) {
                                        if (jComboBox1.getSelectedIndex() == 0) {
                                            if (op1.getText() != null && !"".equals(op1.getText())) {
                                                //answer[count] = op1.getText();
                                                insert();
                                            } else {
                                                JOptionPane.showMessageDialog(null, "Option 1 is empty.");
                                            }
                                        } else if (jComboBox1.getSelectedIndex() == 1) {
                                            if (op2.getText() != null && !"".equals(op2.getText())) {
                                                //answer[count] = op2.getText();
                                                insert();
                                            } else {
                                                JOptionPane.showMessageDialog(null, "Option 2 is empty.");
                                            }
                                        } else if (jComboBox1.getSelectedIndex() == 2) {
                                            if (op3.getText() != null && !"".equals(op3.getText())) {
                                                //answer[count] = op3.getText();
                                                insert();
                                            } else {
                                                JOptionPane.showMessageDialog(null, "Option 3 is empty.");
                                            }
                                        } else if (jComboBox1.getSelectedIndex() == 3) {
                                            if (op4.getText() != null && !"".equals(op4.getText())) {
                                                //answer[count] = op4.getText();
                                                insert();
                                            } else {
                                                JOptionPane.showMessageDialog(null, "Option 4 is empty.");
                                            }
                                        }
                                    } else {
                                        if (jComboBox1.getSelectedIndex() == 0) {
                                            if (op1.getText() != null && !"".equals(op1.getText())) {
                                                //answer[count] = op1.getText();
                                                insert();
                                            } else {
                                                JOptionPane.showMessageDialog(null, "Option 1 is empty.");
                                            }
                                        } else if (jComboBox1.getSelectedIndex() == 1) {
                                            if (op2.getText() != null && !"".equals(op2.getText())) {
                                                //answer[count] = op2.getText();
                                                insert();
                                            } else {
                                                JOptionPane.showMessageDialog(null, "Option 2 is empty.");
                                            }
                                        } else if (jComboBox1.getSelectedIndex() == 2) {
                                            if (op3.getText() != null && !"".equals(op3.getText())) {
                                                //answer[count] = op3.getText();
                                                insert();
                                            } else {
                                                JOptionPane.showMessageDialog(null, "Option 3 is empty.");
                                            }
                                        } else if (jComboBox1.getSelectedIndex() == 3) {
                                            if (op4.getText() != null && !"".equals(op4.getText())) {
                                                //answer[count] = op4.getText();
                                                insert();
                                            } else {
                                                JOptionPane.showMessageDialog(null, "Option 4 is empty.");
                                            }
                                        } else {
                                            JOptionPane.showMessageDialog(null, getS() + " questions are completed.\nPress Save and Finish Button.");
                                        }
                                    }

                                } else {
                                    JOptionPane.showMessageDialog(null, "Please fill up option 4.");
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Please fill up option 3.");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Please fill up option 2.");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Please fill up option 1.");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "There is no question.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Exam name or total marks or both are missing.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Press new document button to start.");
        }
    }//GEN-LAST:event_nextActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        if (eName.getText() != null && !"".equals(eName.getText()) && eMarks.getText() != null && !"".equals(eMarks.getText())) {

            if (!"".equals(questionArea.getText()) || questionArea.getText() != null) {
                if (!"".equals(op1.getText()) || op1.getText() != null) {
                    if (!"".equals(op2.getText()) || op2.getText() != null) {
                        if (!"".equals(op3.getText()) || op3.getText() != null) {
                            if (!"".equals(op4.getText()) || op4.getText() != null) {
                                if (count < getS()) {
                                    if (jComboBox1.getSelectedIndex() == 0) {
                                        if (op1.getText() != null && !"".equals(op1.getText())) {
                                            //answer[count] = op1.getText();
                                            insert1();
                                        } else {
                                            JOptionPane.showMessageDialog(null, "Option 1 is empty.");
                                        }
                                    } else if (jComboBox1.getSelectedIndex() == 1) {
                                        if (op2.getText() != null && !"".equals(op2.getText())) {
                                            //answer[count] = op2.getText();
                                            insert1();
                                        } else {
                                            JOptionPane.showMessageDialog(null, "Option 2 is empty.");
                                        }
                                    } else if (jComboBox1.getSelectedIndex() == 2) {
                                        if (op3.getText() != null && !"".equals(op3.getText())) {
                                            //answer[count] = op3.getText();
                                            insert1();
                                        } else {
                                            JOptionPane.showMessageDialog(null, "Option 3 is empty.");
                                        }
                                    } else if (jComboBox1.getSelectedIndex() == 3) {
                                        if (op4.getText() != null && !"".equals(op4.getText())) {
                                            //answer[count] = op4.getText();
                                            insert1();
                                        } else {
                                            JOptionPane.showMessageDialog(null, "Option 4 is empty.");
                                        }
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, getS() + " questions complete.");
                                }

                            } else {
                                JOptionPane.showMessageDialog(null, "Please fill up option 4.");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Please fill up option 3.");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Please fill up option 2.");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Please fill up option 1.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "There is no question.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Exam name or total marks or both are missing.");
        }
    }//GEN-LAST:event_saveActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        if (getNewcount() == 1) {
            if (jComboBox1.getSelectedIndex() == 0) {
                if (op1.getText() != null && !"".equals(op1.getText())) {
                    answer[count] = op1.getText();
                    ansl.setText(answer[count]);
                } else {
                    JOptionPane.showMessageDialog(null, "Option 1 is empty.");
                }
            } else if (jComboBox1.getSelectedIndex() == 1) {
                if (op2.getText() != null && !"".equals(op2.getText())) {
                    answer[count] = op2.getText();
                    ansl.setText(answer[count]);
                } else {
                    JOptionPane.showMessageDialog(null, "Option 2 is empty.");
                }
            } else if (jComboBox1.getSelectedIndex() == 2) {
                if (op3.getText() != null && !"".equals(op3.getText())) {
                    answer[count] = op3.getText();
                    ansl.setText(answer[count]);
                } else {
                    JOptionPane.showMessageDialog(null, "Option 3 is empty.");
                }
            } else if (jComboBox1.getSelectedIndex() == 3) {
                if (op4.getText() != null && !"".equals(op4.getText())) {
                    answer[count] = op4.getText();
                    ansl.setText(answer[count]);
                } else {
                    JOptionPane.showMessageDialog(null, "Option 4 is empty.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Press New Button.");
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        count--;
        if (count <= 0) {
            count = 0;
        }
        questionArea.setText(Question[count]);
        op1.setText(option1[count]);
        op2.setText(option2[count]);
        op3.setText(option3[count]);
        op4.setText(option4[count]);
        imageName.setText(image[count]);
        if ("-(%E%)-".equals(fontType[count])) {
            englishButtonActionPerformed(evt);
        } else if ("-(%B%)-".equals(fontType[count])) {
            banglaButtonActionPerformed(evt);
        }
        ansl.setText(answer[count]);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        // TODO add your handling code here:
        try {
            size = Integer.parseInt(JOptionPane.showInputDialog(null, "How many question?"));
            Question = new String[size + 10];
            option1 = new String[size + 10];
            option2 = new String[size + 10];
            option3 = new String[size + 10];
            option4 = new String[size + 10];
            image = new String[size + 10];
            fontType = new String[size + 10];
            answer = new String[size + 10];

            setCount(0);

            eName.setText("");
            eMarks.setText("");
            questionArea.setText((count + 1) + ". ");
            op1.setText("");
            op2.setText("");
            op3.setText("");
            op4.setText("");
            imageName.setText("none");
            ansl.setText("");
            setNewcount(1);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error." + ex);
        }
    }//GEN-LAST:event_newButtonActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        newButtonActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        HelpA h = new HelpA();
        h.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void englishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_englishButtonActionPerformed
        // TODO add your handling code here:
        questionArea.setFont(new Font("Times New Roman", Font.PLAIN, 14));
        op1.setFont(new Font("Times New Roman", Font.PLAIN, 14));
        op2.setFont(new Font("Times New Roman", Font.PLAIN, 14));
        op3.setFont(new Font("Times New Roman", Font.PLAIN, 14));
        op4.setFont(new Font("Times New Roman", Font.PLAIN, 14));
        ansl.setFont(new Font("Times New Roman", Font.PLAIN, 14));
        fontLebel.setFont(new Font("Times New Roman", Font.PLAIN, 14));
        fontLebel.setText("English");
    }//GEN-LAST:event_englishButtonActionPerformed

    private void banglaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_banglaButtonActionPerformed
        // TODO add your handling code here:
        questionArea.setFont(new Font("SutonnyMJ", Font.PLAIN, 18));
        op1.setFont(new Font("SutonnyMJ", Font.PLAIN, 18));
        op2.setFont(new Font("SutonnyMJ", Font.PLAIN, 18));
        op3.setFont(new Font("SutonnyMJ", Font.PLAIN, 18));
        op4.setFont(new Font("SutonnyMJ", Font.PLAIN, 18));
        ansl.setFont(new Font("SutonnyMJ", Font.PLAIN, 18));
        fontLebel.setFont(new Font("SutonnyMJ", Font.PLAIN, 18));
        fontLebel.setText(banglaButton.getText());
    }//GEN-LAST:event_banglaButtonActionPerformed

    private void imageChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageChooserActionPerformed
        // TODO add your handling code here:
        try {
            JFileChooser fc = new JFileChooser();
            fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            int result = fc.showOpenDialog(this);
            if (result == JFileChooser.CANCEL_OPTION) {
            }
            File fileName = fc.getSelectedFile();
            if (fileName.exists()) {
                imageName.setText(fileName.getName());
            }
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_imageChooserActionPerformed

    public void insert() {

        examName = eName.getText();
        TotalMarks = eMarks.getText();
        Question[count] = questionArea.getText();
        option1[count] = op1.getText();
        option2[count] = op2.getText();
        option3[count] = op3.getText();
        option4[count] = op4.getText();
        image[count] = imageName.getText();
        if ((fontLebel.getText()).equalsIgnoreCase("English")) {
            fontType[count] = "-(%E%)-";
        } else {
            fontType[count] = "-(%B%)-";
        }
        answer[count] = ansl.getText();

        count++;
        if (count >= size) {
            count--;
        }
        ansl.setText(answer[count]);
        questionArea.setText(Question[count]);
        op1.setText(option1[count]);
        op2.setText(option2[count]);
        op3.setText(option3[count]);
        op4.setText(option4[count]);
        imageName.setText(image[count]);
        if ("-(%E%)-".equals(fontType[count])) {
            englishButtonActionPerformed(null);
        } else if ("-(%B%)-".equals(fontType[count])) {
            banglaButtonActionPerformed(null);
        }
        if (questionArea.getText() == null || "".equals(questionArea.getText())) {
            questionArea.setText((getCount() + 1) + ". ");
        }
        if (imageName.getText() == null || "".equals(imageName.getText())) {
            imageName.setText("none");
        }
    }

    public void insert1() {
        questionName = JOptionPane.showInputDialog(null, "Enter the name of the Question file");
        answerName = JOptionPane.showInputDialog(null, "Enter the name of the Answer file");
        if (questionName == null || "".equals(questionName) || answerName == null || "".equals(answerName)) {
            JOptionPane.showMessageDialog(null, "Please enter the both file name correctly.");
        } else {
            examName = eName.getText();
            TotalMarks = eMarks.getText();
            Question[count] = questionArea.getText();
            option1[count] = op1.getText();
            option2[count] = op2.getText();
            option3[count] = op3.getText();
            option4[count] = op4.getText();
            image[count] = imageName.getText();
            if ((fontLebel.getText()).equalsIgnoreCase("English")) {
                fontType[count] = "-(%E%)-";
            } else {
                fontType[count] = "-(%B%)-";
            }
            answer[count] = ansl.getText();

            count++;

            progress.setMaximum(getS());
            progress.setValue(0);
            sf = new SavingFile(this);
            sf.openFile();
            sf.writting();
            sf.closeFile();
            JOptionPane.showMessageDialog(null, getQuestionName() + ".doc and " + getAnswerName() + ".doc " + " and the Formal Question for the examinee\nis created in D://Exam Controller/ and D://Exam Controller/Formal Question respectivly");
            setNewcount(0);
        }
    }

    public void makingDir() {
        File mkfd = new File("D://Exam Controller/Formal Question");
        mkfd.mkdir();
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ansl;
    private javax.swing.JButton banglaButton;
    private javax.swing.JTextField eMarks;
    private javax.swing.JTextField eName;
    private javax.swing.JButton englishButton;
    private javax.swing.JLabel fontLebel;
    private javax.swing.JButton imageChooser;
    private javax.swing.JTextField imageName;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton newButton;
    private javax.swing.JButton next;
    private javax.swing.JTextField op1;
    private javax.swing.JTextField op2;
    private javax.swing.JTextField op3;
    private javax.swing.JTextField op4;
    public javax.swing.JProgressBar progress;
    public javax.swing.JTextArea questionArea;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables
}
